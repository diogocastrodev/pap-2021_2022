version: "3"

services:
  # Web/Frontend Container
  web:
    # Container name
    container_name: reparacoes-web
    # Restart when something is changed
    restart: always
    # Network
    networks:
      reparacoes:
        ipv4_address: 172.30.0.5
    # Folder to build (Where Dockerfile is located)
    build: ./web
    # Where is stored the data
    volumes:
      - ./web:/usr/reparacoes/src/web
    # Ports
    ports:
      - "80:3000"
    # Environment Variables
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_URL: localhost
    # Dependencies
    depends_on:
      - api
    # Connections
    links:
      - api
      - api:backend

  # API/Backend Container
  api:
    # Container name
    container_name: reparacoes-api
    # Restart when something is changed
    restart: always
    # Network
    networks:
      reparacoes:
        ipv4_address: 172.30.0.6
    # Connections
    links:
      - database
      - database:db
    build: ./api
    # Environment Variables
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}"
    # Where is stored the data
    volumes:
      - ./api:/usr/reparacoes/src/api
    # Ports
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    # Dependencies
    depends_on:
      - database

  # Database Container
  database:
    # Container name
    container_name: reparacoes-database
    # This image is the official postgres image (https://hub.docker.com/_/postgres)
    image: postgres
    # Network
    networks:
      reparacoes:
        ipv4_address: 172.30.0.7
    # Environment Variables
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    # Where is stored the data
    volumes:
      - "pgdata:/var/lib/postgresql/data/"
    # Ports
    ports:
      - "${DB_PORT}:${DB_PORT}"

volumes:
  pgdata: {}

networks:
  reparacoes:
    name: reparacoes
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
