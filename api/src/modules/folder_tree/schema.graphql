scalar DateTime

type Query {
  userFolders: [exportedData]!
  getFilesByFolder(folderId: ID!): [Files]
  getFolderById(folderId: ID!): Folders
}

type Mutation {
  createFolder(name: String!, parent_id: ID, color: String): Folders
}

type returnFolders {
  folders: [exportedData]!
}

type exportedData {
  folder_id: ID!
  parent_id: ID
  name: String!

  color: String!

  children: [exportedData]

  files: [Files]
}

type Folders {
  folder_id: ID!
  name: String!

  color: String!

  created_at: DateTime!
  updated_at: DateTime!

  parent_id: ID
  parent_folder: Folders
  folders: [Folders]

  user: User

  files: [Files]
}
