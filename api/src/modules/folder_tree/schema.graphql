scalar DateTime

type Query {
  userFolders: returnFolders
  getFilesByFolder(folderId: ID!): [Files]
}

type Mutation {
  createFolder(data: createFolderInput!): Folders
}

input createFolderInput {
  name: String!
  parent_id: ID
  color: String
  color_style: ColorStyle
}

type returnFolders {
  folders: [exportedData]!
  folders_amount: Int!
}

type exportedData {
  folder_id: ID!
  parent_id: ID!
  name: String!

  color: String!
  color_style: ColorStyle!

  children: [exportedData]
  depth: Int!

  files: [Files]!
}

type Folders {
  folder_id: ID!
  name: String!

  color: String!
  color_style: ColorStyle!

  created_at: DateTime!
  updated_at: DateTime!

  parent_id: ID
  parent_folder: Folders
  folders: [Folders]

  user_id: String!
  user: User

  todos: [Todo]

  files: [Files]
}

enum ColorStyle {
  RGBA
  RGB
  HEX
}
