scalar DateTime

type Query {
  me: user
  checkToken: Boolean!
  profile(id: ID!): profile
}

type Mutation {
  register(data: RegisterInput!): String
  login(data: LoginInput!): String
  verifyEmail(hash: String!): String
}

input RegisterInput {
  email: String!
  name: String!
  surname: String!
  password: String!
  phone_number: String
}

input LoginInput {
  email: String!
  password: String!
}

type profile {
  avatar: String
  email: String!

  haveAvatar: Boolean!

  name: String!
  surname: String!

  product: [product]
}

type user {
  public_user_id: String

  email: String!

  name: String!
  surname: String!

  location: String!

  phone_number: String

  haveAvatar: Boolean!
  avatar: String

  product: [product]
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}
