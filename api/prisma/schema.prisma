// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id        String @id @default(uuid())
  public_user_id Int    @unique @default(autoincrement())

  username String @unique
  email    String @unique
  password String

  roles Roles @default(USER)

  status UserStatus @default(PENDING)
  hash   String?    @default(cuid())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  folders folders[]
}

enum Roles {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum ColorStyle {
  RGBA
  RGB
  HEX
}

model folders {
  folder_id String @id @default(uuid())
  name      String

  color       String     @default("0 0 0 0")
  color_style ColorStyle @default(RGBA)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Antipattern - Depend of a parent
  parent_id     String?
  parent_folder folders?  @relation("subfolder", fields: [parent_id], references: [folder_id])
  folders       folders[] @relation("subfolder")

  // User
  user_id String
  user    user   @relation(fields: [user_id], references: [user_id])

  // Todos
  todos todo[]
}

model todo {
  todo_id     String     @id @default(uuid())
  description String
  status      TodoStatus

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  folder    folders? @relation(fields: [folder_id], references: [folder_id])
  folder_id String?
}

enum TodoStatus {
  ACTIVE
  DONE
  DELETED
}
